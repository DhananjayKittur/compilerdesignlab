Terminals unused in grammar

   SWIZZLE
   QUALIFIER
   EOL


Grammar

    0 $accept: program $end

    1 program: parse
    2        | program parse

    3 parse: decl
    4      | stmt
    5      | shader_def
    6      | function_def

    7 shader_def: class_def TYPE SEMICOLON

    8 class_def: KEYWORD id COLON

    9 decl: deftype SEMICOLON

   10 stmt: expr SEMICOLON
   11     | func_stmt SEMICOLON
   12     | return_statement SEMICOLON

   13 expr: assign val

   14 assign: STATE EQUAL
   15       | id EQUAL

   16 deftype: TYPE id

   17 func_stmt: assign func_call
   18          | func_call

   19 func_call: id LPARENTHESIS param_list RPARENTHESIS

   20 param_list: %empty
   21           | param_type
   22           | param_list COMMA param_type

   23 param_type: val
   24           | id

   25 function_def: deftype arg_list block

   26 args: %empty
   27     | deftype
   28     | args COMMA deftype

   29 arg_list: LPARENTHESIS args RPARENTHESIS

   30 block: LBRACE code_block RBRACE

   31 code_block: %empty
   32           | code_block stmt
   33           | code_block decl
   34           | code_block if_statement

   35 val: INT
   36    | FLOAT

   37 id: IDENTIFIER

   38 return_statement: RETURN_KEY val
   39                 | RETURN_KEY id

   40 if_statement: IF bool_ops stmt
   41             | IF bool_ops stmt ELSE stmt

   42 bool_ops: LPARENTHESIS id LT INT RPARENTHESIS


Terminals, with rules where they appear

$end (0) 0
error (256)
KEYWORD (258) 8
IDENTIFIER (259) 37
COLON (260) 8
TYPE (261) 7 16
SWIZZLE (262)
SEMICOLON (263) 7 9 10 11 12
QUALIFIER (264)
EQUAL (265) 14 15
INT (266) 35 42
FLOAT (267) 36
LPARENTHESIS (268) 19 29 42
RPARENTHESIS (269) 19 29 42
LBRACE (270) 30
RBRACE (271) 30
RETURN_KEY (272) 38 39
LT (273) 42
IF (274) 40 41
ELSE (275) 41
COMMA (276) 22 28
STATE (277) 14
EOL (278)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
program (25)
    on left: 1 2, on right: 0 2
parse (26)
    on left: 3 4 5 6, on right: 1 2
shader_def (27)
    on left: 7, on right: 5
class_def (28)
    on left: 8, on right: 7
decl (29)
    on left: 9, on right: 3 33
stmt (30)
    on left: 10 11 12, on right: 4 32 40 41
expr (31)
    on left: 13, on right: 10
assign (32)
    on left: 14 15, on right: 13 17
deftype (33)
    on left: 16, on right: 9 25 27 28
func_stmt (34)
    on left: 17 18, on right: 11
func_call (35)
    on left: 19, on right: 17 18
param_list (36)
    on left: 20 21 22, on right: 19 22
param_type (37)
    on left: 23 24, on right: 21 22
function_def (38)
    on left: 25, on right: 6
args (39)
    on left: 26 27 28, on right: 28 29
arg_list (40)
    on left: 29, on right: 25
block (41)
    on left: 30, on right: 25
code_block (42)
    on left: 31 32 33 34, on right: 30 32 33 34
val (43)
    on left: 35 36, on right: 13 23 38
id (44)
    on left: 37, on right: 8 15 16 19 24 39 42
return_statement (45)
    on left: 38 39, on right: 12
if_statement (46)
    on left: 40 41, on right: 34
bool_ops (47)
    on left: 42, on right: 40 41


State 0

    0 $accept: . program $end

    KEYWORD     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    TYPE        shift, and go to state 3
    RETURN_KEY  shift, and go to state 4
    STATE       shift, and go to state 5

    program           go to state 6
    parse             go to state 7
    shader_def        go to state 8
    class_def         go to state 9
    decl              go to state 10
    stmt              go to state 11
    expr              go to state 12
    assign            go to state 13
    deftype           go to state 14
    func_stmt         go to state 15
    func_call         go to state 16
    function_def      go to state 17
    id                go to state 18
    return_statement  go to state 19


State 1

    8 class_def: KEYWORD . id COLON

    IDENTIFIER  shift, and go to state 2

    id  go to state 20


State 2

   37 id: IDENTIFIER .

    $default  reduce using rule 37 (id)


State 3

   16 deftype: TYPE . id

    IDENTIFIER  shift, and go to state 2

    id  go to state 21


State 4

   38 return_statement: RETURN_KEY . val
   39                 | RETURN_KEY . id

    IDENTIFIER  shift, and go to state 2
    INT         shift, and go to state 22
    FLOAT       shift, and go to state 23

    val  go to state 24
    id   go to state 25


State 5

   14 assign: STATE . EQUAL

    EQUAL  shift, and go to state 26


State 6

    0 $accept: program . $end
    2 program: program . parse

    $end        shift, and go to state 27
    KEYWORD     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    TYPE        shift, and go to state 3
    RETURN_KEY  shift, and go to state 4
    STATE       shift, and go to state 5

    parse             go to state 28
    shader_def        go to state 8
    class_def         go to state 9
    decl              go to state 10
    stmt              go to state 11
    expr              go to state 12
    assign            go to state 13
    deftype           go to state 14
    func_stmt         go to state 15
    func_call         go to state 16
    function_def      go to state 17
    id                go to state 18
    return_statement  go to state 19


State 7

    1 program: parse .

    $default  reduce using rule 1 (program)


State 8

    5 parse: shader_def .

    $default  reduce using rule 5 (parse)


State 9

    7 shader_def: class_def . TYPE SEMICOLON

    TYPE  shift, and go to state 29


State 10

    3 parse: decl .

    $default  reduce using rule 3 (parse)


State 11

    4 parse: stmt .

    $default  reduce using rule 4 (parse)


State 12

   10 stmt: expr . SEMICOLON

    SEMICOLON  shift, and go to state 30


State 13

   13 expr: assign . val
   17 func_stmt: assign . func_call

    IDENTIFIER  shift, and go to state 2
    INT         shift, and go to state 22
    FLOAT       shift, and go to state 23

    func_call  go to state 31
    val        go to state 32
    id         go to state 33


State 14

    9 decl: deftype . SEMICOLON
   25 function_def: deftype . arg_list block

    SEMICOLON     shift, and go to state 34
    LPARENTHESIS  shift, and go to state 35

    arg_list  go to state 36


State 15

   11 stmt: func_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 37


State 16

   18 func_stmt: func_call .

    $default  reduce using rule 18 (func_stmt)


State 17

    6 parse: function_def .

    $default  reduce using rule 6 (parse)


State 18

   15 assign: id . EQUAL
   19 func_call: id . LPARENTHESIS param_list RPARENTHESIS

    EQUAL         shift, and go to state 38
    LPARENTHESIS  shift, and go to state 39


State 19

   12 stmt: return_statement . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 20

    8 class_def: KEYWORD id . COLON

    COLON  shift, and go to state 41


State 21

   16 deftype: TYPE id .

    $default  reduce using rule 16 (deftype)


State 22

   35 val: INT .

    $default  reduce using rule 35 (val)


State 23

   36 val: FLOAT .

    $default  reduce using rule 36 (val)


State 24

   38 return_statement: RETURN_KEY val .

    $default  reduce using rule 38 (return_statement)


State 25

   39 return_statement: RETURN_KEY id .

    $default  reduce using rule 39 (return_statement)


State 26

   14 assign: STATE EQUAL .

    $default  reduce using rule 14 (assign)


State 27

    0 $accept: program $end .

    $default  accept


State 28

    2 program: program parse .

    $default  reduce using rule 2 (program)


State 29

    7 shader_def: class_def TYPE . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 30

   10 stmt: expr SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 31

   17 func_stmt: assign func_call .

    $default  reduce using rule 17 (func_stmt)


State 32

   13 expr: assign val .

    $default  reduce using rule 13 (expr)


State 33

   19 func_call: id . LPARENTHESIS param_list RPARENTHESIS

    LPARENTHESIS  shift, and go to state 39


State 34

    9 decl: deftype SEMICOLON .

    $default  reduce using rule 9 (decl)


State 35

   29 arg_list: LPARENTHESIS . args RPARENTHESIS

    TYPE  shift, and go to state 3

    $default  reduce using rule 26 (args)

    deftype  go to state 43
    args     go to state 44


State 36

   25 function_def: deftype arg_list . block

    LBRACE  shift, and go to state 45

    block  go to state 46


State 37

   11 stmt: func_stmt SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 38

   15 assign: id EQUAL .

    $default  reduce using rule 15 (assign)


State 39

   19 func_call: id LPARENTHESIS . param_list RPARENTHESIS

    IDENTIFIER  shift, and go to state 2
    INT         shift, and go to state 22
    FLOAT       shift, and go to state 23

    $default  reduce using rule 20 (param_list)

    param_list  go to state 47
    param_type  go to state 48
    val         go to state 49
    id          go to state 50


State 40

   12 stmt: return_statement SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 41

    8 class_def: KEYWORD id COLON .

    $default  reduce using rule 8 (class_def)


State 42

    7 shader_def: class_def TYPE SEMICOLON .

    $default  reduce using rule 7 (shader_def)


State 43

   27 args: deftype .

    $default  reduce using rule 27 (args)


State 44

   28 args: args . COMMA deftype
   29 arg_list: LPARENTHESIS args . RPARENTHESIS

    RPARENTHESIS  shift, and go to state 51
    COMMA         shift, and go to state 52


State 45

   30 block: LBRACE . code_block RBRACE

    $default  reduce using rule 31 (code_block)

    code_block  go to state 53


State 46

   25 function_def: deftype arg_list block .

    $default  reduce using rule 25 (function_def)


State 47

   19 func_call: id LPARENTHESIS param_list . RPARENTHESIS
   22 param_list: param_list . COMMA param_type

    RPARENTHESIS  shift, and go to state 54
    COMMA         shift, and go to state 55


State 48

   21 param_list: param_type .

    $default  reduce using rule 21 (param_list)


State 49

   23 param_type: val .

    $default  reduce using rule 23 (param_type)


State 50

   24 param_type: id .

    $default  reduce using rule 24 (param_type)


State 51

   29 arg_list: LPARENTHESIS args RPARENTHESIS .

    $default  reduce using rule 29 (arg_list)


State 52

   28 args: args COMMA . deftype

    TYPE  shift, and go to state 3

    deftype  go to state 56


State 53

   30 block: LBRACE code_block . RBRACE
   32 code_block: code_block . stmt
   33           | code_block . decl
   34           | code_block . if_statement

    IDENTIFIER  shift, and go to state 2
    TYPE        shift, and go to state 3
    RBRACE      shift, and go to state 57
    RETURN_KEY  shift, and go to state 4
    IF          shift, and go to state 58
    STATE       shift, and go to state 5

    decl              go to state 59
    stmt              go to state 60
    expr              go to state 12
    assign            go to state 13
    deftype           go to state 61
    func_stmt         go to state 15
    func_call         go to state 16
    id                go to state 18
    return_statement  go to state 19
    if_statement      go to state 62


State 54

   19 func_call: id LPARENTHESIS param_list RPARENTHESIS .

    $default  reduce using rule 19 (func_call)


State 55

   22 param_list: param_list COMMA . param_type

    IDENTIFIER  shift, and go to state 2
    INT         shift, and go to state 22
    FLOAT       shift, and go to state 23

    param_type  go to state 63
    val         go to state 49
    id          go to state 50


State 56

   28 args: args COMMA deftype .

    $default  reduce using rule 28 (args)


State 57

   30 block: LBRACE code_block RBRACE .

    $default  reduce using rule 30 (block)


State 58

   40 if_statement: IF . bool_ops stmt
   41             | IF . bool_ops stmt ELSE stmt

    LPARENTHESIS  shift, and go to state 64

    bool_ops  go to state 65


State 59

   33 code_block: code_block decl .

    $default  reduce using rule 33 (code_block)


State 60

   32 code_block: code_block stmt .

    $default  reduce using rule 32 (code_block)


State 61

    9 decl: deftype . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 62

   34 code_block: code_block if_statement .

    $default  reduce using rule 34 (code_block)


State 63

   22 param_list: param_list COMMA param_type .

    $default  reduce using rule 22 (param_list)


State 64

   42 bool_ops: LPARENTHESIS . id LT INT RPARENTHESIS

    IDENTIFIER  shift, and go to state 2

    id  go to state 66


State 65

   40 if_statement: IF bool_ops . stmt
   41             | IF bool_ops . stmt ELSE stmt

    IDENTIFIER  shift, and go to state 2
    RETURN_KEY  shift, and go to state 4
    STATE       shift, and go to state 5

    stmt              go to state 67
    expr              go to state 12
    assign            go to state 13
    func_stmt         go to state 15
    func_call         go to state 16
    id                go to state 18
    return_statement  go to state 19


State 66

   42 bool_ops: LPARENTHESIS id . LT INT RPARENTHESIS

    LT  shift, and go to state 68


State 67

   40 if_statement: IF bool_ops stmt .
   41             | IF bool_ops stmt . ELSE stmt

    ELSE  shift, and go to state 69

    $default  reduce using rule 40 (if_statement)


State 68

   42 bool_ops: LPARENTHESIS id LT . INT RPARENTHESIS

    INT  shift, and go to state 70


State 69

   41 if_statement: IF bool_ops stmt ELSE . stmt

    IDENTIFIER  shift, and go to state 2
    RETURN_KEY  shift, and go to state 4
    STATE       shift, and go to state 5

    stmt              go to state 71
    expr              go to state 12
    assign            go to state 13
    func_stmt         go to state 15
    func_call         go to state 16
    id                go to state 18
    return_statement  go to state 19


State 70

   42 bool_ops: LPARENTHESIS id LT INT . RPARENTHESIS

    RPARENTHESIS  shift, and go to state 72


State 71

   41 if_statement: IF bool_ops stmt ELSE stmt .

    $default  reduce using rule 41 (if_statement)


State 72

   42 bool_ops: LPARENTHESIS id LT INT RPARENTHESIS .

    $default  reduce using rule 42 (bool_ops)
